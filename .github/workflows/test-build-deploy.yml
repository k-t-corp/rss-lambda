name: Test, build and deploy

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.12

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests
      run: |
        python -m unittest discover

  build:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to the Github Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push container
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository }}:latest
          platforms: linux/amd64,linux/arm64
  
  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push'
    steps:
      - name: Setup Tailscale
        id: tailscale
        uses: tailscale/github-action@main
        with:
          authkey: ${{ secrets.TS_AUTHKEY }}
          version: 1.58.2
      - name: Add SSH key
        id: ssh
        env:
          SSH_KEY: ${{ secrets.SSH_KEY }}
        run: |
          mkdir -p ~/.ssh
          MACHINE_IP="$(tailscale ip -6 $TS_MACHINE)"
          ssh-keyscan $MACHINE_IP >> ~/.ssh/known_hosts
          printf "%s" "$SSH_KEY" > ~/.ssh/key
          chmod 600 ~/.ssh/key
      - name: Ssh into the machine, pull container and restart
        run: |
          MACHINE_IP="$(tailscale ip -6 $TS_MACHINE)"
          ssh -i ~/.ssh/key "ubuntu@$MACHINE_IP" "cd $TS_DIR && docker compose pull && docker compose up -d"
